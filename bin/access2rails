#!/usr/bin/env ruby
require 'access2rails'
require 'optparse'

options = {
  :verbose => false,
  :models => true,
}
opt_parser = OptionParser.new do |opts|
  opts.banner = "Usage: access2rails [options] file_or_directory..."

  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end
  opts.on("-m", "--[no-]models", "Generate rails models") do |m|
    options[:models] = m
  end
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end

begin
  opt_parser.parse!
rescue OptionParser::InvalidOption => e
  puts e.to_s
  puts opt_parser.help
  exit
end

files = []
ARGV.each do |path|
  if File.directory?(path)
    files.concat(Dir.glob(File.join(path, "*.xsd")))
  elsif File.exists?(path)
    files << path
  else
    puts "File not found: #{path}"
    exit
  end
end

if files.count == 0
  puts "No files to process!"
  puts opt_parser.help
  exit
end

files.each do |schema_filename|
  #schema_filename = 'examples/Switchboard Items.xsd'
  schema = Access2rails::Xsd::Schema.from_xml(File.read(schema_filename))
  model_generator = Access2rails::ModelGenerator.from_schema(schema)
  migration_generator = Access2rails::MigrationGenerator.from_schema(schema)

  if options[:models]
    puts "Generating model"
    model_path = File.join('app/models', model_generator.filename)
    File.open(model_path, 'w+') do |f|
      f.puts(model_generator.build)
    end
  end

  puts "Generating migration"
  puts migration_generator.build
end

